{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/Card/Card.js","components/CardList/CardList.js","utils/constants.js","components/Preloader/Preloader.js","components/Pagination/Pagination.js","components/CardsContainer/CardsContainer.js","components/SearchForm/SearchForm.js","components/NotFound/NotFound.js","components/Popup/Popup.js","utils/api.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","Footer","year","Date","getFullYear","href","target","rel","Card","card","onCardClick","onClick","src","image","alt","name","CardList","searchedCards","isNoData","isMobile","isTablet","isError","useState","cards","setCards","cardsAmountRow","cardsAmount","setCardsAmount","useEffect","newCards","map","c","filter","index","id","length","Preloader","Pagination","pages","currentPage","onPreviousPage","onPageClick","onNextPage","pageNumbers","i","push","disabled","number","evt","CardsContainer","isLoading","count","SearchForm","onSearchSubmit","searchValueByName","setSearchValueByName","searchValueBySpecies","setSearchValueBySpecies","searchValueByType","setSearchValueByType","filteredValueByStatus","setFilteredValueByStatus","filteredValueByGender","setFilteredValueByGender","onSubmit","preventDefault","htmlFor","type","value","onChange","minLength","maxLength","pattern","placeholder","NotFound","history","useHistory","goBack","Popup","onClose","setImage","setName","species","setSpecies","setType","status","setStatus","gender","setGender","openedClass","currentTarget","Api","config","this","url","baseUrl","headers","res","ok","json","Promise","reject","Error","page","filters","fetch","then","_parseResponse","api","App","searchName","setSearchName","searchSpecies","setSearchSpecies","searchType","setSearchType","setCount","setPages","setIsError","setIsLoading","setIsNoData","selectedCard","setSelectedCard","setCurrentPage","useMediaQuery","maxWidth","closeAllPopups","document","removeEventListener","handleEscClose","keyCode","urlName","toLowerCase","urlSpecies","urlType","urlStatus","urlGender","filtersString","getAllCharacters","filteredCards","error","results","info","catch","finally","exact","path","addEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.23fddc3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className='header'>\r\n      <NavLink to='/' className='header__link'>\r\n        <h1 className='header__title'>\r\n          Search for characters Rick And Morty API\r\n        </h1>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nexport default function Footer() {\r\n  const year = new Date().getFullYear();\r\n  return (\r\n    <div className='footer'>\r\n      <h2 className='footer__title'>Тестовое задание Котеговой Надежды</h2>\r\n      <div className='footer__wrapper'>\r\n        <p className='footer__copyright'>&copy; {year}</p>\r\n        <a\r\n          className='footer__link'\r\n          href='https://github.com/Kotezh'\r\n          target='_blank'\r\n          rel='noreferrer noopener'\r\n        >\r\n          Github\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport default function Card({ card, onCardClick }) {\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  return (\r\n    <div className='card' onClick={handleClick}>\r\n      <img\r\n        className='card__image'\r\n        src={card?.image || \"\"}\r\n        alt={card?.name || \"\"}\r\n      />\r\n      <div className='card__caption-wrapper'>\r\n        <h3 className='card__title'>{card?.name || \"\"}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./CardList.css\";\r\nimport Card from \"../Card/Card\";\r\nimport {\r\n  DESKTOP_ROW_AMOUNT,\r\n  DESKTOP_CARDS_AMOUNT,\r\n  TABLET_ROW_AMOUNT,\r\n  MOBILE_ROW_AMOUNT,\r\n  NOT_FOUND_ERROR_TEXT,\r\n  ANY_ERROR_TEXT,\r\n} from \"../../utils/constants\";\r\n\r\nexport default function CardList({\r\n  searchedCards,\r\n  isNoData,\r\n  isMobile,\r\n  isTablet,\r\n  isError,\r\n  onCardClick,\r\n}) {\r\n  const [cards, setCards] = useState(searchedCards);\r\n  const cardsAmountRow = rowAmount();\r\n  const [cardsAmount, setCardsAmount] = useState(DESKTOP_CARDS_AMOUNT);\r\n\r\n  // resize\r\n  function rowAmount() {\r\n    if (isMobile) {\r\n      return MOBILE_ROW_AMOUNT;\r\n    } else if (isTablet) {\r\n      return TABLET_ROW_AMOUNT;\r\n    } else {\r\n      return DESKTOP_ROW_AMOUNT;\r\n    }\r\n  }\r\n  // ===============================================================\r\n\r\n  useEffect(() => {\r\n    const newCards = searchedCards.map((c) => {\r\n      const card = { ...c };\r\n      return card;\r\n    });\r\n    setCards(newCards);\r\n  }, [searchedCards]);\r\n\r\n  function handleClickMore() {\r\n    const cardsCount = cardsAmount;\r\n    setCardsAmount(cardsCount + cardsAmountRow);\r\n  }\r\n\r\n  return (\r\n    <section className='cards-section'>\r\n      <div className='cards-section__list'>\r\n        {isError ? (\r\n          <span className='cards-section__error'>{ANY_ERROR_TEXT}</span>\r\n        ) : isNoData ? (\r\n          <span className='cards-section__no-data'>{NOT_FOUND_ERROR_TEXT}</span>\r\n        ) : (\r\n          cards\r\n            .filter((card, index) => index < cardsAmount)\r\n            .map((card) => (\r\n              <Card key={card.id} card={card} onCardClick={onCardClick} />\r\n            ))\r\n        )}\r\n      </div>\r\n      {cards?.length > cardsAmount && !isError && (\r\n        <button onClick={handleClickMore} className='cards-section__btn-more'>\r\n          Load more\r\n        </button>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","export const DESKTOP_CARDS_AMOUNT = 12;\r\nexport const DESKTOP_ROW_AMOUNT = 8;\r\nexport const TABLET_ROW_AMOUNT = 3;\r\nexport const MOBILE_ROW_AMOUNT = 2;\r\nexport const ESC_KEYCODE = 27;\r\n\r\nexport const URL = 'https://rickandmortyapi.com';\r\n\r\nexport const NOT_FOUND_ERROR_TEXT = 'Ничего не найдено';\r\nexport const KEYWORD_ERROR_TEXT = 'Нужно ввести ключевое слово';\r\nexport const ANY_ERROR_TEXT =\r\n  'Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз.';\r\n","import React from 'react';\r\nimport './Preloader.css';\r\n\r\nexport default function Preloader() {\r\n  return (\r\n    <div className='preloader'>\r\n      <div className='preloader__container'>\r\n        <span className='preloader__round'></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nexport default function Pagination({\r\n  pages,\r\n  currentPage,\r\n  onPreviousPage,\r\n  onPageClick,\r\n  onNextPage,\r\n}) {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= pages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {pages <= 1 ? null : (\r\n        <section className='pagination'>\r\n          <ul className='pagination__list'>\r\n            <li className='pagination__item'>\r\n              <button\r\n                className='pagination__btn pagination__btn_type_go'\r\n                disabled={currentPage === 1 ? \"disabled\" : null}\r\n                onClick={onPreviousPage}\r\n              >\r\n                Previous Page\r\n              </button>\r\n            </li>\r\n\r\n            {pageNumbers.map((number) => (\r\n              <li className='pagination__item' key={number}>\r\n                <button\r\n                  className={`pagination__btn ${\r\n                    currentPage === number ? \"pagination__btn_active\" : \"\"\r\n                  }`}\r\n                  onClick={(evt) => onPageClick(evt, number)}\r\n                >\r\n                  {number}\r\n                </button>\r\n              </li>\r\n            ))}\r\n\r\n            <li className='pagination__item'>\r\n              <button\r\n                className='pagination__btn pagination__btn_type_go'\r\n                disabled={currentPage === pages ? \"disabled\" : null}\r\n                onClick={onNextPage}\r\n              >\r\n                Next Page\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./CardsContainer.css\";\r\nimport CardList from \"../CardList/CardList\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\n\r\nexport default function CardsContainer({\r\n  isMobile,\r\n  isTablet,\r\n  searchedCards,\r\n  isLoading,\r\n  isNoData,\r\n  isError,\r\n  onCardClick,\r\n  count,\r\n  pages,\r\n  currentPage,\r\n  onPreviousPage,\r\n  onPageClick,\r\n  onNextPage,\r\n}) {\r\n  return (\r\n    <div className='cards-container'>\r\n      {isLoading ? (\r\n        <Preloader />\r\n      ) : (\r\n        <>\r\n          <div className='cards-container__summary'>\r\n            <p className='summary__item'>{count} results</p>\r\n            <p className='summary__item'>{pages} pages</p>\r\n          </div>\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            pages={pages}\r\n            onPreviousPage={onPreviousPage}\r\n            onPageClick={onPageClick}\r\n            onNextPage={onNextPage}\r\n          />\r\n          <CardList\r\n            searchedCards={searchedCards}\r\n            onCardClick={onCardClick}\r\n            isNoData={isNoData}\r\n            isMobile={isMobile}\r\n            isTablet={isTablet}\r\n            isError={isError}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./SearchForm.css\";\r\n\r\nexport default function SearchForm({ onSearchSubmit }) {\r\n  const [searchValueByName, setSearchValueByName] = useState(\"\");\r\n  const [searchValueBySpecies, setSearchValueBySpecies] = useState(\"\");\r\n  const [searchValueByType, setSearchValueByType] = useState(\"\");\r\n  const [filteredValueByStatus, setFilteredValueByStatus] = useState(\"all\");\r\n  const [filteredValueByGender, setFilteredValueByGender] = useState(\"all\");\r\n\r\n  function handleSearchNameChange(evt) {\r\n    setSearchValueByName(evt.target.value);\r\n  }\r\n\r\n  function handleSearchSpeciesChange(evt) {\r\n    setSearchValueBySpecies(evt.target.value);\r\n  }\r\n\r\n  function handleSearchTypeChange(evt) {\r\n    setSearchValueByType(evt.target.value);\r\n  }\r\n\r\n  function handleSearchStatusChange(evt) {\r\n    setFilteredValueByStatus(evt.target.value);\r\n  }\r\n\r\n  function handleSearchGenderChange(evt) {\r\n    setFilteredValueByGender(evt.target.value);\r\n  }\r\n\r\n  function handleSearchSubmit(evt) {\r\n    evt.preventDefault();\r\n    onSearchSubmit(\r\n      searchValueByName,\r\n      searchValueBySpecies,\r\n      searchValueByType,\r\n      filteredValueByStatus,\r\n      filteredValueByGender\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='search'>\r\n      <div className='search__wrapper'>\r\n        <form className='search__form' onSubmit={handleSearchSubmit}>\r\n          <fieldset className='search__fieldset search__fieldset_inputs'>\r\n            <label htmlFor='search-name' className='search__input-label'>\r\n              <span className='search__span'>name:</span>\r\n              <input\r\n                id='search-name'\r\n                type='text'\r\n                name='search-name'\r\n                value={searchValueByName}\r\n                onChange={handleSearchNameChange}\r\n                minLength='0'\r\n                maxLength='300'\r\n                className='search__input'\r\n                pattern='^.+$'\r\n                placeholder='name'\r\n              />\r\n            </label>\r\n            <label htmlFor='search-species' className='search__input-label'>\r\n              <span className='search__span'>species:</span>\r\n              <input\r\n                id='search-species'\r\n                type='text'\r\n                name='search-species'\r\n                value={searchValueBySpecies}\r\n                onChange={handleSearchSpeciesChange}\r\n                minLength='0'\r\n                maxLength='300'\r\n                className='search__input'\r\n                pattern='^.+$'\r\n                placeholder='species'\r\n              />\r\n            </label>\r\n            <label htmlFor='search-type' className='search__input-label'>\r\n              <span className='search__span'>type:</span>\r\n              <input\r\n                id='search-type'\r\n                type='text'\r\n                name='search-type'\r\n                value={searchValueByType}\r\n                onChange={handleSearchTypeChange}\r\n                minLength='0'\r\n                maxLength='300'\r\n                className='search__input'\r\n                pattern='^.+$'\r\n                placeholder='type'\r\n              />\r\n            </label>\r\n          </fieldset>\r\n          <fieldset className='search__fieldset search__fieldset_selects'>\r\n            <label className='search__fieldset-label'>\r\n              <span className='search__span'>status:</span>\r\n              <select\r\n                className='search__select'\r\n                value={filteredValueByStatus}\r\n                onChange={handleSearchStatusChange}\r\n              >\r\n                <option value='all'>all</option>\r\n                <option value='alive'>Alive</option>\r\n                <option value='dead'>Dead</option>\r\n                <option value='unknown'>Unknown</option>\r\n              </select>\r\n            </label>\r\n            <label className='search__fieldset-label'>\r\n              <span className='search__span'>gender:</span>\r\n              <select\r\n                className='search__select'\r\n                value={filteredValueByGender}\r\n                onChange={handleSearchGenderChange}\r\n              >\r\n                <option value='all'>all</option>\r\n                <option value='female'>Female</option>\r\n                <option value='male'>Male</option>\r\n                <option value='genderless'>Genderless</option>\r\n                <option value='unknown'>Unknown</option>\r\n              </select>\r\n            </label>\r\n          </fieldset>\r\n          <button className='search__button' type='submit'>\r\n            Search\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default function NotFound() {\r\n  const history = useHistory();\r\n  const goBack = () => history.goBack();\r\n\r\n  return (\r\n    <div className='not-found-page'>\r\n      <h2 className='not-found-page__title'>404</h2>\r\n      <p className='not-found-page__text'>Страница не найдена</p>\r\n      <span className='not-found-page__link' onClick={goBack}>\r\n        Назад\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Popup.css\";\r\n\r\nexport default function Popup({ card, onClose }) {\r\n  const [image, setImage] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [species, setSpecies] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n\r\n  const openedClass = card ? \"popup_opened\" : \"\";\r\n\r\n  useEffect(() => {\r\n    if (card) {\r\n      setImage(card.image);\r\n      setName(card.name);\r\n      setSpecies(card.species);\r\n      setType(card.type);\r\n      setStatus(card.status);\r\n      setGender(card.gender);\r\n    }\r\n  }, [card]);\r\n\r\n  function handleOverlayClick(evt) {\r\n    if (evt.target === evt.currentTarget) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={`popup popup_type_character ${openedClass}`}\r\n      onClick={handleOverlayClick}\r\n    >\r\n      <div className='popup__character-wrapper'>\r\n        <figure className='popup__figure'>\r\n          <img className='popup__image' src={image} alt={name} />\r\n          <figcaption className='popup__caption'>\r\n            <h3 className='popup__title'>{name ? name : \"None\"}</h3>\r\n            <p className='popup__text'>species: {species ? species : \"None\"}</p>\r\n            <p className='popup__text'>type: {type ? type : \"None\"}</p>\r\n            <p className='popup__text'>status: {status ? status : \"None\"}</p>\r\n            <p className='popup__text'>gender: {gender ? gender : \"None\"}</p>\r\n          </figcaption>\r\n        </figure>\r\n        <button\r\n          type='reset'\r\n          aria-label='Close'\r\n          className='popup__close popup__close_type_full-image'\r\n          onClick={onClose}\r\n        ></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import { URL } from \"./constants\";\r\n\r\nclass Api {\r\n  constructor(config) {\r\n    this.url = config.baseUrl;\r\n    this.headers = config.headers;\r\n  }\r\n\r\n  _parseResponse(res) {\r\n    if (res.ok || res.status === 404) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n  }\r\n\r\n  getAllCharacters(page = 1, filters = \"\") {\r\n    return fetch(`${this.url}/api/character/?page=${page}${filters}`, {\r\n      headers: this.headers,\r\n    }).then(this._parseResponse);\r\n  }\r\n}\r\n\r\nconst config = {\r\n  baseUrl: URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst api = new Api(config);\r\n\r\nexport default api;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Header from \"../Header/Header\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport CardsContainer from \"../CardsContainer/CardsContainer\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport NotFound from \"../NotFound/NotFound\";\r\nimport Popup from \"../Popup/Popup\";\r\nimport api from \"../../utils/api\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { ESC_KEYCODE } from \"../../utils/constants\";\r\n\r\nexport default function App() {\r\n  const [cards, setCards] = useState([]);\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchSpecies, setSearchSpecies] = useState(\"\");\r\n  const [searchType, setSearchType] = useState(\"\");\r\n  const [count, setCount] = useState(\"\");\r\n  const [pages, setPages] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filteredValueByStatus, setFilteredValueByStatus] = useState(\"all\");\r\n  const [filteredValueByGender, setFilteredValueByGender] = useState(\"all\");\r\n  const [isNoData, setIsNoData] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const isMobile = useMediaQuery({ maxWidth: 630 });\r\n  const isTablet = useMediaQuery({ maxWidth: 930 });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !!searchName ||\r\n      !!searchSpecies ||\r\n      !!searchType ||\r\n      filteredValueByStatus ||\r\n      filteredValueByGender\r\n    ) {\r\n      setIsLoading(true);\r\n      const urlName =\r\n        searchName !== \"\" ? `&name=${searchName.toLowerCase()}` : \"\";\r\n      const urlSpecies =\r\n        searchSpecies !== \"\" ? `&species=${searchSpecies.toLowerCase()}` : \"\";\r\n      const urlType =\r\n        searchType !== \"\" ? `&type=${searchType.toLowerCase()}` : \"\";\r\n      const urlStatus =\r\n        filteredValueByStatus && filteredValueByStatus !== \"all\"\r\n          ? `&status=${filteredValueByStatus}`\r\n          : \"\";\r\n      const urlGender =\r\n        filteredValueByGender && filteredValueByGender !== \"all\"\r\n          ? `&gender=${filteredValueByGender}`\r\n          : \"\";\r\n      const filtersString = `${urlName}${urlStatus}${urlSpecies}${urlType}${urlGender}`;\r\n      api\r\n        .getAllCharacters(currentPage, filtersString)\r\n        .then((filteredCards) => {\r\n          if (filteredCards?.error !== \"There is nothing here\") {\r\n            setCards(filteredCards.results);\r\n            setCount(filteredCards.info.count);\r\n            setPages(filteredCards.info.pages);\r\n          } else {\r\n            setCount(0);\r\n            setPages(0);\r\n            setIsNoData(true);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setIsError(true);\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }, [\r\n    searchName,\r\n    searchSpecies,\r\n    searchType,\r\n    filteredValueByStatus,\r\n    filteredValueByGender,\r\n    currentPage,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!isError) {\r\n      if (\r\n        !cards.length &&\r\n        (searchName ||\r\n          searchSpecies ||\r\n          searchType ||\r\n          filteredValueByStatus ||\r\n          filteredValueByGender)\r\n      ) {\r\n        setIsNoData(true);\r\n      } else {\r\n        setIsNoData(false);\r\n      }\r\n    }\r\n  }, [\r\n    cards,\r\n    searchName,\r\n    searchSpecies,\r\n    searchType,\r\n    filteredValueByStatus,\r\n    filteredValueByGender,\r\n    isError,\r\n  ]);\r\n\r\n  function handleSearchClick(\r\n    searchName,\r\n    searchSpecies,\r\n    searchType,\r\n    filteredValueByStatus,\r\n    filteredValueByGender\r\n  ) {\r\n    setIsError(false);\r\n    setSearchName(searchName);\r\n    setSearchSpecies(searchSpecies);\r\n    setSearchType(searchType);\r\n    setFilteredValueByStatus(filteredValueByStatus);\r\n    setFilteredValueByGender(filteredValueByGender);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n    document.addEventListener(\"keydown\", handleEscClose);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setSelectedCard(null);\r\n    document.removeEventListener(\"keydown\", handleEscClose);\r\n  }\r\n\r\n  function handleEscClose(evt) {\r\n    const key = evt.keyCode;\r\n    if (key === ESC_KEYCODE) {\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n  function goToPreviousPage(evt) {\r\n    evt.preventDefault();\r\n    currentPage - 1 > 1 && setCurrentPage(currentPage - 1);\r\n  }\r\n\r\n  function goToNextPage(evt) {\r\n    evt.preventDefault();\r\n    currentPage + 1 <= pages && setCurrentPage(currentPage + 1);\r\n  }\r\n\r\n  function handlePageClick(evt, number) {\r\n    evt.preventDefault();\r\n    number !== currentPage && setCurrentPage(number);\r\n  }\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Header />\r\n      <SearchForm onSearchSubmit={handleSearchClick} />\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <CardsContainer\r\n            searchedCards={cards}\r\n            onCardClick={handleCardClick}\r\n            isMobile={isMobile}\r\n            isTablet={isTablet}\r\n            isLoading={isLoading}\r\n            isNoData={isNoData}\r\n            isError={isError}\r\n            pages={pages}\r\n            count={count}\r\n            currentPage={currentPage}\r\n            onPreviousPage={goToPreviousPage}\r\n            onPageClick={handlePageClick}\r\n            onNextPage={goToNextPage}\r\n          />\r\n        </Route>\r\n        <Route path='*'>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n      <Footer />\r\n      <Popup onClose={closeAllPopups} card={selectedCard} />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}